<?xml version="1.0" encoding="UTF-8" ?>
<feed  version="1.0" hasPendingRequests="false" >
  <company></company>
  <status>200</status>
  <errmsg>OK</errmsg>
  <interval>0</interval>
    <entry type="predatasource">
        <version>1546019261</version>
        <name>WM_VMware_vSphere_HostInterface_Status</name>
        <displayedas>VMware Host Network Interface Status</displayedas>
        <description>Monitors network interfaces on vSphere hosts</description>
        <collector>script</collector>
        <hasMultiInstances>true</hasMultiInstances>
        <useWildValueAsUniqueIdentifier>false</useWildValueAsUniqueIdentifier>
        <schedule>60</schedule>
        <appliesTo>system.virtualization == &#34;VMWare ESX host&#34;</appliesTo>
        <wildcardauto>true</wildcardauto>
        <wildcardpersist>true</wildcardpersist>
        <wildcardlinuxscript>ad_script</wildcardlinuxscript>
        <wildcardlinuxcmdline>type=&#34;embeded&#34; </wildcardlinuxcmdline>
        <wildcardwinscript>ad_script</wildcardwinscript>
        <wildcardwincmdline>type=&#34;embeded&#34; </wildcardwincmdline>
        <wildcardgroovyscript>import com.santaba.agent.groovyapi.esx.ESX
import com.vmware.vim25.mo.InventoryNavigator

def hostname = hostProps.get(&#34;system.hostname&#34;);
def user = hostProps.get(&#34;esx.user&#34;);
def pass = hostProps.get(&#34;esx.pass&#34;);
def custom_url = hostProps.get(&#34;esx.url&#34;);


// connect up to the esx service
def url = custom_url ?: String.format(&#34;https://%s/sdk&#34;, hostname);
def svc = new ESX();
svc.open(url, user, pass, 10 * 1000); // timeout in 10 seconds
def si = svc.getServiceInstance();
def rootFolder = si.getRootFolder();

// Get resource clusters
hosts = new InventoryNavigator(rootFolder).searchManagedEntities(&#34;HostSystem&#34;);
host = hosts[0];

// iterate over each physical NIC
host.hostNetworkSystem.networkInfo.pnic.each()
{ nic -&#62;
        
    instance_id = nic.device
    instance_name = instance_id + &#34; / &#34; +  nic.mac
    instance_props = &#34;auto.mac_address=&#34; + nic.mac
    instance_desc = instance_id
        
    // print out ad line
    println instance_id + &#34;##&#34; + instance_name + &#34;##&#34; + instance_desc + &#34;####&#34; + instance_props;
}

return 0;</wildcardgroovyscript>
        <wildcardschedule>1440</wildcardschedule>
        <wildcarddisable>false</wildcarddisable>
        <wildcarddeleteinactive>true</wildcarddeleteinactive>
        <agdmethod>none</agdmethod>
        <agdparams></agdparams>
        <group></group>
        <tags>application,vsphere,vm,vmware</tags>
        <technology>- define esx.user and esx.pass for authentication

status == 0 (ok) or 1 (not OK)</technology>
        <adlist><![CDATA[{"agdmethod":"none","method":"ad_script","agdparams":"","id":0,"filters":[],"params":{"type":"embeded","groovyscript":"import com.santaba.agent.groovyapi.esx.ESX\nimport com.vmware.vim25.mo.InventoryNavigator\n\ndef hostname = hostProps.get(\"system.hostname\");\ndef user = hostProps.get(\"esx.user\");\ndef pass = hostProps.get(\"esx.pass\");\ndef custom_url = hostProps.get(\"esx.url\");\n\n\n// connect up to the esx service\ndef url = custom_url ?: String.format(\"https://%s/sdk\", hostname);\ndef svc = new ESX();\nsvc.open(url, user, pass, 10 * 1000); // timeout in 10 seconds\ndef si = svc.getServiceInstance();\ndef rootFolder = si.getRootFolder();\n\n// Get resource clusters\nhosts = new InventoryNavigator(rootFolder).searchManagedEntities(\"HostSystem\");\nhost = hosts[0];\n\n// iterate over each physical NIC\nhost.hostNetworkSystem.networkInfo.pnic.each()\n{ nic ->\n        \n    instance_id = nic.device\n    instance_name = instance_id + \" / \" +  nic.mac\n    instance_props = \"auto.mac_address=\" + nic.mac\n    instance_desc = instance_id\n        \n    // print out ad line\n    println instance_id + \"##\" + instance_name + \"##\" + instance_desc + \"####\" + instance_props;\n}\n\nreturn 0;"}}]]></adlist>
        <schemaVersion>2</schemaVersion>
    <integrationMetadata>
        <integrationVersion>1.0.0</integrationVersion>
        <integrationAuthorCompanyUuid>3077be7b-0676-11e6-bdcc-f01fafdb43d7</integrationAuthorCompanyUuid>
        <integrationLineageId>yDn9jHGtTu2NjQNVLWolug</integrationLineageId>
        <integrationChecksum>9c3e10340df53cbe2aa4edcd9c4e4e47</integrationChecksum>
        <integrationAuthorNamespace>willingminds</integrationAuthorNamespace>
        <integrationId>52a435e9-e445-4d27-835c-b38c58167ba8</integrationId>
        <integrationLocator></integrationLocator>
        <integrationName></integrationName>
    </integrationMetadata>
        <dataSourceType>1</dataSourceType>
        <attributes>
        <attribute>
            <name>scripttype</name>
            <value>embed</value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>scriptgroovy</name>
            <value>import com.santaba.agent.groovyapi.esx.ESX
import com.vmware.vim25.mo.InventoryNavigator

def hostname = hostProps.get(&#34;system.hostname&#34;);
def user = hostProps.get(&#34;esx.user&#34;);
def pass = hostProps.get(&#34;esx.pass&#34;);
def custom_url = hostProps.get(&#34;esx.url&#34;);


// connect up to the esx service
def url = custom_url ?: String.format(&#34;https://%s/sdk&#34;, hostname);
def svc = new ESX();
svc.open(url, user, pass, 10 * 1000); // timeout in 10 seconds
def si = svc.getServiceInstance();
def rootFolder = si.getRootFolder();

// Get resource clusters
hosts = new InventoryNavigator(rootFolder).searchManagedEntities(&#34;HostSystem&#34;);
host = hosts[0];

status = 1

// iterate over each physical NIC
host.hostNetworkSystem.networkInfo.pnic.each()
{ nic -&#62;
    if (nic.device == &#34;##WILDVALUE##&#34;){
        // is the nic active?
        status = 1
        if (nic.linkSpeed)
        {
           // yes.
          status = 0
        }
        println &#34;status=$status&#34;
    }

}

return 0;</value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>windowsscript</name>
            <value></value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>linuxscript</name>
            <value></value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>windowscmdline</name>
            <value></value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>linuxcmdline</name>
            <value></value>
            <comment></comment>
        </attribute>
        </attributes>
        <datapoints>
        <datapoint>
            <name>status</name>
            <originId></originId>
            <dataType>7</dataType>
            <type>2</type>
            <postprocessormethod>namevalue</postprocessormethod>
            <postprocessorparam>status</postprocessorparam>
            <usevalue>output</usevalue>
            <alertexpr>!= 0</alertexpr>
            <alertmissing>2</alertmissing>
            <alertsubject></alertsubject>
            <alertbody></alertbody>
            <enableanomalyalertsuppression></enableanomalyalertsuppression>
            <adadvsettingenabled>false</adadvsettingenabled>
            <warnadadvsetting></warnadadvsetting>
            <erroradadvsetting></erroradadvsetting>
            <criticaladadvsetting></criticaladadvsetting>
            <description></description>
            <maxvalue></maxvalue>
            <minvalue></minvalue>
            <userparam1></userparam1>
            <userparam2></userparam2>
            <userparam3></userparam3>
            <iscomposite>false</iscomposite>
            <rpn></rpn>
            <alertTransitionIval>0</alertTransitionIval>
            <alertClearTransitionIval>0</alertClearTransitionIval>
        </datapoint>
        </datapoints>
        <graphs>
        <graph>
            <name>Status</name>
            <title>Status</title>
            <originId></originId>            <verticallabel>Status</verticallabel>
            <rigid>false</rigid>
            <maxvalue>NaN</maxvalue>
            <minvalue>0.0</minvalue>
            <displayprio>1</displayprio>
            <timescale>1day</timescale>
            <base1024>false</base1024>
            <graphdatapoints>
        <graphdatapoint>
            <name>status</name>
            <datapointname>status</datapointname>
            <originId></originId>
            <cf>2</cf>
        </graphdatapoint>
            </graphdatapoints>
            <graphvirtualdatapoints>
            </graphvirtualdatapoints>
            <graphdatas>
            <graphdata>
                <type>2</type>
                <legend>status</legend>
                <color>silver</color>
                <datapointname>status</datapointname>
                <isvirtualdatapoint>false</isvirtualdatapoint>
            </graphdata>
            </graphdatas>
        </graph>
        </graphs>
        <overviewgraphs>
        </overviewgraphs>
        <scripts>
        </scripts>
    </entry>
</feed>
